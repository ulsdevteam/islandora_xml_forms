<?php

/**
 * @file
 * XML Forms base module.
 */

/**
 * Implements Hook Menu.
 *
 * @return array
 *   Array of menu items.
 */
function xml_forms_menu() {
  $items['schema/%'] = array(
    'title' => 'schema',
    'description' => 'schema',
    'page callback' => 'xml_forms_get_schema',
    'page arguments' => array(1),
    'access arguments' => array('access content'),
    'type' => MENU_CALLBACK,
  );
  return $items;
}

/**
 * Get the schema if it exists.
 *
 * @param string $filename
 *   XSD to grab the schema from.
 */
function xml_forms_get_schema($filename) {
  $path = drupal_get_path('module', 'xml_forms') . '/schema';
  $full_filename = "$path/$filename";
  if (file_exists($full_filename)) {
    drupal_goto($full_filename);
  }
  else {
    drupal_not_found();
  }
}

/**
 * Implements Hook Form Alter.
 */
function xml_forms_form_alter(&$form, &$form_state, $form_id) {
  if ($form_id == 'xml_form_builder_datastream_form') {
    foreach ($form as $k => $element) {
      $form[$k] = _adjust_maxlength($element);
    }
  }
}

/** 
 * Helper function to recursively add the maxlength value to any "textfield" elements from the form
 */
function _adjust_maxlength(&$element) {
  if (isset($element['#type']) && $element['#type'] == 'textfield') {
    $element['#maxlength'] = 1024;
  }
  if (is_array($element)) {
    foreach ($element as $k => $element_children) {
      $element[$k] = _adjust_maxlength($element_children);
    }
  }
  return $element;
}

